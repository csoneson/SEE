% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/family_ColumnDotPlot.R
\docType{methods}
\name{ColumnDotPlot-class}
\alias{ColumnDotPlot-class}
\alias{initialize,ColumnDotPlot-method}
\alias{.cacheCommonInfo,ColumnDotPlot-method}
\alias{.refineParameters,ColumnDotPlot-method}
\alias{.defineInterface,ColumnDotPlot-method}
\alias{.createObservers,ColumnDotPlot-method}
\alias{.hideInterface,ColumnDotPlot-method}
\alias{.multiSelectionDimension,ColumnDotPlot-method}
\title{The ColumnDotPlot virtual class}
\description{
The ColumnDotPlot is a virtual class where each column in the \linkS4class{SummarizedExperiment} is represented by a point (\dQuote{dot}) in a brushable plot.
It provides slots and methods to control various aesthetics of the dots and to store the brush or lasso selection.
}
\section{Slot overview}{

The following slots control coloring of the points:
\itemize{
\item \code{ColorByColData}, a string specifying the \code{\link{colData}} field for controlling point color,
if \code{ColorBy="Column data"} (see the \linkS4class{Panel} class).
Defaults to the first valid field (see \code{.refineParameters} below).
\item \code{ColorByFeatNameAssay}, a string specifying the assay of the SummarizedExperiment object containing values to use for coloring,
if \code{ColorBy="Feature name"}.
Defaults to the name of the first valid assay (see \code{?"\link{.refineParameters,DotPlot-method}"} for details).
\item \code{ColorBySampNameColor}, a string specifying the color to use for coloring an individual sample on the plot,
if \code{ColorBy="Sample name"}.
Defaults to \code{"red"}.
}

The following slots control other metadata-related aesthetic aspects of the points:
\itemize{
\item \code{ShapeByColData}, a string specifying the \code{\link{colData}} field for controlling point shape,
if \code{ShapeBy="Column data"} (see the \linkS4class{Panel} class).
The specified field should contain categorical values; defaults to the first such valid field.
\item \code{SizeByColData}, a string specifying the \code{\link{colData}} field for controlling point size,
if \code{SizeBy="Column data"} (see the \linkS4class{Panel} class).
The specified field should contain continuous values; defaults to the first such valid field.
}

In addition, this class inherits all slots from its \linkS4class{DotPlot} and \linkS4class{Panel} classes.
}

\section{Contract description}{

The ColumnDotPlot will provide user interface elements to change all above slots as well as slots in its parent classes \linkS4class{DotPlot} and \linkS4class{Panel}.
It will also provide observers to respond to any input changes in those slots and trigger rerendering of the output.

Subclasses are expected to implement methods for (at least) \code{\link{.generateDotPlotData}}.
}

\section{Supported methods}{

In the following code snippets, \code{x} is an instance of a \linkS4class{ColumnDotPlot} class.
Refer to the documentation for each method for more details on the remaining arguments.

For setting up data values:
\itemize{
\item \code{\link{.cacheCommonInfo}(x)} adds a \code{"ColumnDotPlot"} entry containing \code{valid.colData.names}, a character vector of names of columns that are valid (i.e., contain atomic values); \code{discrete.colData.names}, a character vector of names for columns with discrete atomic values; and \code{continuous.colData.names}, a character vector of names of columns with continuous atomic values.
This will also call the equivalent \linkS4class{DotPlot} method.
\item \code{\link{.refineParameters}(x, se)} replaces \code{NA} values in \code{ColorByFeatAssay} with the first valid assay name in \code{se}.
This will also call the equivalent \linkS4class{DotPlot} method.
}

For defining the interface:
\itemize{
\item \code{\link{.defineInterface}(x, se, select_info)} defines the user interface for manipulating all slots described above and in the parent classes.
It will also create a data parameter box that can respond to specialized \code{\link{.defineDataInterface}}.
This will \emph{override} the \linkS4class{Panel} method.
\item \code{\link{.hideInterface}(x, field)} returns a logical scalar indicating whether the interface element corresponding to \code{field} should be hidden.
This returns \code{TRUE} for row selection parameters (\code{"SelectRowSource"}, \code{"SelectRowType"} and \code{"SelectRowSaved"}),
otherwise it dispatches to the \linkS4class{Panel} method.
}

For monitoring reactive expressions:
\itemize{
\item \code{\link{.createObservers}(x, se, input, session, pObjects, rObjects)} sets up observers for all slots described above and in the parent classes.
This will also call the equivalent \linkS4class{DotPlot} method.
}

For controlling selections:
\itemize{
\item \code{\link{.multiSelectionDimension}(x)} returns \code{"column"} to indicate that a column selection is being transmitted.
}

Unless explicitly specialized above, all methods from the parent classes \linkS4class{DotPlot} and \linkS4class{Panel} are also available.
}

\seealso{
\linkS4class{DotPlot}, for the immediate parent class that contains the actual slot definitions.
}
\author{
Aaron Lun
}
