% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/panel_ComplexHeatmapPlot.R
\docType{methods}
\name{ComplexHeatmapPlot-class}
\alias{ComplexHeatmapPlot-class}
\alias{ComplexHeatmapPlot}
\alias{.cacheCommonInfo,ComplexHeatmapPlot-method}
\alias{.createObservers,ComplexHeatmapPlot-method}
\alias{.defineDataInterface,ComplexHeatmapPlot-method}
\alias{.defineInterface,ComplexHeatmapPlot-method}
\alias{.defineOutput,ComplexHeatmapPlot-method}
\alias{.fullName,ComplexHeatmapPlot-method}
\alias{.generateOutput,ComplexHeatmapPlot-method}
\alias{.hideInterface,ComplexHeatmapPlot-method}
\alias{.panelColor,ComplexHeatmapPlot-method}
\alias{.refineParameters,ComplexHeatmapPlot-method}
\alias{.renderOutput,ComplexHeatmapPlot-method}
\alias{initialize,ComplexHeatmapPlot-method}
\title{The ComplexHeatmapPlot panel}
\description{
The ComplexHeatmapPlot is a panel class for creating a \linkS4class{Panel} that displays an assay of a \linkS4class{SummarizedExperiment} object as a \code{\link{Heatmap}} with features as rows and samples and columns, respectively.
It provides slots and methods for specifying the features of interest, which assay to display in the main heatmap, any transformations to perform on the data, and which metadata variables to display as row and column heatmap annotations.
}
\section{ComplexHeatmapPlot slot overview}{

The following slots control the assay that is used:
\itemize{
\item \code{Assay}, string specifying the name of the assay to use for obtaining expression values.
Defaults to the first valid assay name (see \code{?"\link{.refineParameters,ComplexHeatmapPlot-method}"} for details).
\item \code{CustomRows}, a logical scalar indicating whether the custom list of features should be used.
If \code{FALSE}, the incoming selection is used instead. Defaults to \code{TRUE}.
\item \code{CustomRowsText}, string specifying a custom list of features to use, as newline-separated row names.
If \code{NA}, defaults to the first row name of the \linkS4class{SummarizedExperiment} object.
}

The following slots control the metadata variables that are used:
\itemize{
\item \code{ColumnData}, a character vector specifying columns of the \code{\link{colData}} to show as \code{\link{columnAnnotation}}.
Defaults to \code{character(0)}.
\item \code{RowData}, a character vector specifying columns of the \code{\link{rowData}} to show as \code{\link{columnAnnotation}}.
Defaults to \code{character(0)}.
}

The following slots control the clustering of features:
\itemize{
\item \code{ClusterRows}, a logical scalar indicating whether features should be clustered by assay data.
Defaults to \code{FALSE}.
\item \code{ClusterRowsDistance}, string specifying a distance measure to use.
This can be any one of \code{"euclidean"}, \code{"maximum"}, \code{"manhattan"}, \code{"canberra"}, \code{"binary"}, \code{"minkowski"}, \code{"pearson"}, \code{"spearman"}, or \code{"kendall"}.
Defaults to \code{"spearman"}.
\item \code{ClusterRowsMethod}, string specifying a linkage method to use.
This can be any one of \code{"ward.D"}, \code{"ward.D2"}, \code{"single"}, \code{"complete"}, \code{"average"}, \code{"mcquitty"}, \code{"median"}, or \code{"centroid"}.
Defaults to \code{"ward.D2"}.
}

The following control transformations applied to rows:
\itemize{
\item \code{AssayCenterRows} is a logical scalar indicating whether assay values should be centered for each row.
\item \code{AssayScaleRows} is a logical scalar indicating whether assay values should be scaled for each row.
This transformation is only applicable if \code{AssayCenterRows} is \code{TRUE}. 
}

The following slots control the color scale:
\itemize{
\item \code{CustomBounds} is logical scale indicating whether the color scale should be constrained by an upper and/or a lower bounds.
\item \code{LowerBound} is a numerical value setting the lower bound of the color scale;
or \code{NA} to disable the lower bound when \code{CustomBounds} is \code{TRUE}.
\item \code{UpperBound} is a numerical value setting the lower bound of the color scale;
or \code{NA} to disable the upper bound when \code{CustomBounds} is \code{TRUE}.
\item \code{DivergentColormap} is a character scalar indicating a 3-color divergent colormap to use when \code{AssayCenterRows} is \code{TRUE}.
}

The following slots refer to general plotting parameters:
\itemize{
\item \code{ShowDimNames}, a character vector specifying the dimensions for which to display names.
This can contain zero or more of \code{"Rows"} and \code{"Columns"}.
Defaults to \code{"Rows"}.
\item \code{LegendPosition}, string specifying the position of the legend on the plot.
Defaults to \code{"Bottom"} but can also be \code{"Right"}.
\item \code{LegendDirection}, string specifying the orientation of the legend on the plot for continuous covariates.
Defaults to \code{"Horizontal"} but can also be \code{"Vertical"}.
}

The following slots control the effect of the transmitted selection from another panel:
\itemize{
\item \code{SelectionEffect}, a string specifying the selection effect.
This should be one of \code{"Color"} (the default), where all selected points change to the specified color;
\code{"Restrict"}, where all non-selected points are not plotted.
\item \code{SelectionColor}, a string specifying the color to use for selected points when \code{SelectionEffect="Color"}.
Defaults to \code{"red"}.
}

The following slots control some aspects of the user interface:
\itemize{
\item \code{DataBoxOpen}, a logical scalar indicating whether the data parameter box should be open.
Defaults to \code{FALSE}.
\item \code{VisualBoxOpen}, a logical scalar indicating whether the visual parameter box should be open.
Defaults to \code{FALSE}.
}

In addition, this class inherits all slots from its parent \linkS4class{Panel} class.
}

\section{Constructor}{

\code{ComplexHeatmapPlot(...)} creates an instance of a ComplexHeatmapPlot class, where any slot and its value can be passed to \code{...} as a named argument.
}

\section{Supported methods}{

In the following code snippets, \code{x} is an instance of a \linkS4class{ComplexHeatmapPlot} class.
Refer to the documentation for each method for more details on the remaining arguments.

For setting up data values:
\itemize{
\item \code{\link{.refineParameters}(x, se)} returns \code{x} after replacing \code{NA} values in \code{"Assay"} with the first valid assay name; and \code{NA} values in \code{CustomRowsText} with the first row name.
This will also call the equivalent \linkS4class{Panel} method for further refinements to \code{x}.
If no valid column metadata fields are available, \code{NULL} is returned instead.
}

For defining the interface:
\itemize{
\item \code{\link{.defineDataInterface}(x, se, select_info)} returns a list of interface elements for manipulating all slots described above.
\item \code{\link{.panelColor}(x)} will return the specified default color for this panel class.
}

For monitoring reactive expressions:
\itemize{
\item \code{\link{.createObservers}(x, se, input, session, pObjects, rObjects)} sets up observers for all slots described above and in the parent classes.
This will also call the equivalent \linkS4class{Panel} method.
}

For defining the panel name:
\itemize{
\item \code{\link{.fullName}(x)} will return \code{"Complex heatmap"}.
}
}

\examples{
#################
# For end-users #
#################

x <- ComplexHeatmapPlot()
x[["ShowDimNames"]]
x[["ShowDimNames"]] <- c("Rows", "Columns")

##################
# For developers #
##################

library(scater)
sce <- mockSCE()
sce <- logNormCounts(sce)

old_cd <- colData(sce)
colData(sce) <- NULL

# Spits out a NULL and a warning if there is nothing to plot.
sce0 <- .cacheCommonInfo(x, sce)
.refineParameters(x, sce0)

# Replaces the default with something sensible.
colData(sce) <- old_cd
sce0 <- .cacheCommonInfo(x, sce)
.refineParameters(x, sce0)

}
\seealso{
\linkS4class{Panel}, for the immediate parent class.
}
\author{
Kevin Rue-Albrecht
}
